name: Deploy Hello World

on:
  push:
    branches: [ "main" ]
    paths: "scripts/hello-world.ps1"

  pull_request:
    branches: [ "main" ]
    paths: "scripts/hello-world.ps1"

  workflow_dispatch:

permissions:
  id-token: write

env:
  automationAccountName: att-demo
  resourceGroupName: rg-att-demo
  runbookName: Hello-World
  script: hello-world.ps1

jobs:
  deploy:
    name: Deploy Script
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      # Log in to Azure
      - uses: azure/login@v1
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      
      - name: Debug
        run: |
          dir
          dir ./scripts

      - name: Deploy Script to Azure Automation as a Runbook
        uses: azure/cli@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az automation runbook replace-content -g ${{ env.resourceGroupName }} --automation-account-name ${{ env.automationAccountName }} -n ${{ env.runbookName }} --content ./scripts/${{ env.script }}
          
      
      - name: Install Az.Automation PowerShell module
        if: false
        shell: pwsh
        run: Install-Module Az.Automation -Force

      - name: Deploy Script to Azure Automation as a Runbook
        if: false
        shell: pwsh
        run: |
          echo "Deploying ${{ env.script }} to Azure Automation as a Runbook"
          Import-AzAutomationRunbook -Path ./scripts/${{ env.script }} -Name ${{ env.runbookName }} -Type PowerShell -AutomationAccountName ${{ env.automationAccountName }} -ResourceGroupName ${{ env.resourceGroupName }} -Force
          Publish-AzAutomationRunbook -Name ${{ env.runbookName }} -AutomationAccountName ${{ env.automationAccountName }} -ResourceGroupName ${{ env.resourceGroupName }}
