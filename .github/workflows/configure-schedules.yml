name: Configure Runbook Schedules

on:
  # Trigger on PRs
  pull_request:
    branches: main
    
  # Manually Trigger
  workflow_dispatch:

env:
  runbookName: Hello-World

jobs:
  deploy:
    name: Deploy Script
    runs-on: ubuntu-latest

    steps:
      - name: Set up PowerShell module cache
        id: ps-module-cache
        uses: actions/cache@v3
        with:
          path: "~/.local/share/powershell/Modules"
          key: ${{ runner.os }}-az-automation

      # Install the PowerShell dependencies
      - name: Install Az.Automation PowerShell module
        if: steps.ps-module-cache.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module Az.Automation

      # Log in to Azure
      - name: Log in to Azure
        shell: pwsh
        run: |
          echo "Logging in to Azure"
          $username = "${{ vars.AZURE_CLIENT_ID }}"
          $password = ${env:CLIENT_SECRET} | ConvertTo-SecureString -AsPlainText -Force
          $credential = New-Object System.Management.Automation.PSCredential($username, $password)
          Connect-AzAccount -ServicePrincipal -Tenant ${{ vars.AZURE_TENANT_ID }} -Credential $credential
        env:
          CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Create Daily Schedule
        shell: pwsh
        run: |
          $StartTime = (Get-Date "6:00:00").AddDays(1)
          New-AzAutomationSchedule -ResourceGroupName ${{ vars.AUTOMATION_RESOURCE_GROUP_NAME }} -AutomationAccountName ${{ vars.AUTOMATION_ACCOUNT_NAME }} -Name "Daily 6am UTC" -Description "Executes daily at 6am UTC" -DayInterval 1 -StartTime $StartTime
          [System.DayOfWeek[]]$WeekDays = @([System.DayOfWeek]::Monday)
          New-AzAutomationSchedule -ResourceGroupName ${{ vars.AUTOMATION_RESOURCE_GROUP_NAME }} -AutomationAccountName ${{ vars.AUTOMATION_ACCOUNT_NAME }} -Name "Weekly on Monday 6am UTC" -Description "Executes weekly on Monday at 6am UTC" -WeekInterval 1 -StartTime $StartTime -DaysOfWeek $WeekDays
